{"version":3,"file":"index.umd.js","sources":["../../src/helpers/index.js"],"sourcesContent":["/**\n * 签名模块\n * @module libs/helpers\n */\nexport default {\n    /**\n     * 删除前后空格\n     * @param {string} 待处理的字符串\n     * @return {string}\n     */\n    removeSpace(str) {\n        if (!str.replace) {\n            return str;\n        }\n        let reg = /(^\\s*)|(\\s*$)/g;\n        return str.replace(reg, '');\n    },\n    /**\n     * 判断是否为空\n     * @param {string} value 字符串\n     * @return {boolean}\n     */\n    isEmpty(value) {\n        return value === null || value === undefined || value.trim() === '';\n    },\n\n    /**\n     * key mirror\n     * @param {Object} obj 对象\n     * @return {Object}\n     */\n    keyMirror(obj) {\n        let ret = {};\n        let key;\n\n        for (key in obj) {\n            if (!obj.hasOwnProperty(key)) {\n                continue;\n            }\n\n            ret[key] = key;\n        }\n\n        return ret;\n    },\n\n    /**\n     * 载入 JS 文件\n     * @param {string} url JS URL\n     */\n    loadScript(url) {\n        const httpReq = new XMLHttpRequest();\n\n        httpReq.open('GET', url, true);\n        httpReq.send(null);\n    },\n\n    /**\n     * 等待 n 毫秒\n     * @param {string} n 毫秒数\n     * @returns {Promise}\n     */\n    sleep(n) {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                resolve();\n            }, n);\n        });\n    }\n};\n"],"names":["removeSpace","str","replace","isEmpty","value","trim","keyMirror","obj","key","ret","hasOwnProperty","loadScript","url","httpReq","XMLHttpRequest","open","send","sleep","n","Promise","resolve","setTimeout"],"mappings":"yLAIe,CAMXA,qBAAYC,OACHA,EAAIC,eACED,SAGJA,EAAIC,QADD,iBACc,KAO5BC,iBAAQC,UACGA,MAAAA,GAA0D,KAAjBA,EAAMC,QAQ1DC,mBAAUC,OAEFC,EADAC,EAAM,OAGLD,KAAOD,EACHA,EAAIG,eAAeF,KAIxBC,EAAID,GAAOA,UAGRC,GAOXE,oBAAWC,OACDC,EAAU,IAAIC,eAEpBD,EAAQE,KAAK,MAAOH,GAAK,GACzBC,EAAQG,KAAK,OAQjBC,eAAMC,UACK,IAAIC,QAAQ,SAAAC,GACfC,WAAW,WACPD,KACDF"}